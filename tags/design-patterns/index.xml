<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Design Patterns on Weihang Lo</title>
    <link>https://weihanglo.tw/tags/design-patterns/</link>
    <description>Recent content in Design Patterns on Weihang Lo</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY-NC-SA 4.0</copyright>
    <lastBuildDate>Sun, 27 Jan 2019 15:04:29 +0800</lastBuildDate><atom:link href="https://weihanglo.tw/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>向上管理的設計模式</title>
      <link>https://weihanglo.tw/posts/2019/design-patterns-for-managing-up/</link>
      <pubDate>Sun, 27 Jan 2019 15:04:29 +0800</pubDate>
      
      <guid>https://weihanglo.tw/posts/2019/design-patterns-for-managing-up/</guid>
      <description>在資訊產業工作久了，其實就會知道，成功的軟體工程師並非社會眼中的科技宅男，溝通反而是做好工作的關鍵。Kate Matsudaira 整理了四個工作上常見的難題，並</description>
    </item>
    
    <item>
      <title>Rx 入門二：觀察者模式</title>
      <link>https://weihanglo.tw/posts/2017/intro-rx-2-observer-pattern/</link>
      <pubDate>Tue, 15 Aug 2017 16:32:39 +0800</pubDate>
      
      <guid>https://weihanglo.tw/posts/2017/intro-rx-2-observer-pattern/</guid>
      <description>本篇介紹 Rx 另一個重要的基礎概念 Observer pattern（觀察者模式）。 （撰於 2017-08-15，基於 Swift 3.1） Definition 觀察者模式（Observer pat</description>
    </item>
    
    <item>
      <title>Rx 入門一：迭代器模式</title>
      <link>https://weihanglo.tw/posts/2017/intro-rx-1-iterator-pattern/</link>
      <pubDate>Tue, 15 Aug 2017 13:06:59 +0800</pubDate>
      
      <guid>https://weihanglo.tw/posts/2017/intro-rx-1-iterator-pattern/</guid>
      <description>本篇介紹 Rx 的重要基礎概念 Iterator pattern（迭代器模式）。 （撰於 2017-08-15，基於 Swift 3.1） Definition 迭代器模式（Iterator patter</description>
    </item>
    
    <item>
      <title>Rx 入門零：ReactiveX</title>
      <link>https://weihanglo.tw/posts/2017/intro-rx-0-reactivex/</link>
      <pubDate>Tue, 15 Aug 2017 09:22:37 +0800</pubDate>
      
      <guid>https://weihanglo.tw/posts/2017/intro-rx-0-reactivex/</guid>
      <description>聽過 Reactive Programming 嗎？ReactiveX（Rx）是近來火紅的技術，帶動函數響應式程式設計的熱潮。本系列將從 Rx 最原始的概念解釋起，一步步認識 Rx 巧妙的設計</description>
    </item>
    
  </channel>
</rss>
