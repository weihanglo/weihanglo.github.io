<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Iterator Pattern on Life is a refactoring process without tests</title>
    <link>https://weihanglo.tw/tags/iterator-pattern/</link>
    <description>Recent content in Iterator Pattern on Life is a refactoring process without tests</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY-NC-SA 4.0</copyright>
    <lastBuildDate>Tue, 15 Aug 2017 13:06:59 +0800</lastBuildDate><atom:link href="https://weihanglo.tw/tags/iterator-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rx 入門一：迭代器模式</title>
      <link>https://weihanglo.tw/posts/2017/intro-rx-1-iterator-pattern/</link>
      <pubDate>Tue, 15 Aug 2017 13:06:59 +0800</pubDate>
      
      <guid>https://weihanglo.tw/posts/2017/intro-rx-1-iterator-pattern/</guid>
      <description>本篇介紹 Rx 的重要基礎概念 Iterator pattern（迭代器模式）。 （撰於 2017-08-15，基於 Swift 3.1） Definition 迭代器模式（Iterator patter</description>
    </item>
    
  </channel>
</rss>
